name: Build csvcubed whl and documentation
on:
  workflow_call:

jobs:
  build_package_and_documentation:
    runs-on: ubuntu-latest
    container:
      image: gsscogs/pythonversiontesting
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update version for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          poetry version "$(echo "${{ github.ref_name }}" | sed -e 's/^.*\/v\(.*\)/\1/')"

      - name: Update version for dev
        # uses a version identifier derived from the Git hash for this commit.
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          git config --global safe.directory '*'
          revision="$(git rev-parse HEAD | tr \'[:lower:]\' \'[:upper:]\')"
          decimal_rev=$(echo "obase=10; ibase=16; $revision" | bc)
          poetry version "0.1.0-dev$decimal_rev"

      - name: Build whl package
        run: poetry build

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ inputs.os }}-${{ inputs.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install python packages
        run: poetry install

      - name: Build documentation
        working-directory: external-docs
        run: |
          poetry run mkdocs build

      - name: Generate Inspect API Docs
        env:
          GIT_REF: ${{ github.ref }}
        run: |
          poetry run sphinx-apidoc -o source src/csvcubed/ -V $GIT_REF | sed -e 's/^.*\/v\(.*\)/v\1/' -R $GIT_REF | sed -e 's/^.*\/v\(.*\)/v\1/'  -f -d 20 -e -t source/_templates
          poetry run make html

      - name: Archive package and documentation
        uses: actions/upload-artifact@v3
        with:
          name: package-and-documentation
          path: |
            **/dist/*.whl
            **/external-docs/site/**/*
            **/build/html/**/*
